Step 1: Update the System
First, update your server to ensure you have the latest packages:



sudo apt update && sudo apt upgrade -y    # For Ubuntu/Debian-based systems
sudo yum update -y                        # For Amazon Linux/CentOS
Step 2: Install Apache Web Server
Apache is the most commonly used web server for WordPress.

For Ubuntu/Debian:


sudo apt install apache2 -y
For Amazon Linux/CentOS:


sudo yum install httpd -y
Start and enable Apache to start on boot:



sudo systemctl start apache2    # Ubuntu/Debian
sudo systemctl start httpd      # Amazon Linux/CentOS

sudo systemctl enable apache2   # Ubuntu/Debian
sudo systemctl enable httpd     # Amazon Linux/CentOS
Step 3: Install MySQL (or MariaDB)
MySQL is the database server that will store WordPress data.

For Ubuntu/Debian:


sudo apt install mysql-server -y

For Amazon Linux/CentOS:


sudo yum install mariadb-server -y
Start and enable the database service:



sudo systemctl start mysql       # Ubuntu/Debian
sudo systemctl start mariadb     # Amazon Linux/CentOS

sudo systemctl enable mysql      # Ubuntu/Debian
sudo systemctl enable mariadb    # Amazon Linux/CentOS
Secure your MySQL installation:



sudo mysql_secure_installation
Step 4: Install PHP
PHP is the programming language used by WordPress.

For Ubuntu/Debian:


sudo apt install php libapache2-mod-php php-mysql -y
For Amazon Linux/CentOS:


sudo yum install php php-mysql -y
To verify PHP installation:



php -v
Step 5: Create a Database for WordPress
Log in to MySQL:



sudo mysql -u root -p
Create a WordPress database:

sql

CREATE DATABASE wordpress;
Create a database user with a password:

sql

CREATE USER 'wpuser'@'localhost' IDENTIFIED BY 'your_password';
Grant the user permissions on the database:

sql

GRANT ALL PRIVILEGES ON wordpress.* TO 'wpuser'@'localhost';
FLUSH PRIVILEGES;
EXIT;
Step 6: Download and Configure WordPress
Download WordPress:



cd /tmp
wget https://wordpress.org/latest.tar.gz
tar -xvzf latest.tar.gz
Move WordPress Files to the web directory:



sudo mv wordpress /var/www/html
Set Proper Permissions:



sudo chown -R www-data:www-data /var/www/html/wordpress    # Ubuntu/Debian
sudo chown -R apache:apache /var/www/html/wordpress        # Amazon Linux/CentOS
Create the wp-config.php File: Copy the sample configuration file and edit it to match your database credentials:



cd /var/www/html/wordpress
cp wp-config-sample.php wp-config.php
Edit the wp-config.php file:



sudo nano wp-config.php
Update the following lines with your database information:

php

define('DB_NAME', 'wordpress');
define('DB_USER', 'wpuser');
define('DB_PASSWORD', 'your_password');
define('DB_HOST', 'localhost');
Step 7: Configure Apache for WordPress
Enable Apache Rewrite Module (required for WordPress pretty permalinks):



sudo a2enmod rewrite  # Ubuntu/Debian only
Set Apache Directory Permissions: Edit the Apache configuration file to allow .htaccess overrides:



sudo nano /etc/apache2/apache2.conf   # Ubuntu/Debian
sudo nano /etc/httpd/conf/httpd.conf  # Amazon Linux/CentOS
Look for the following block and modify it:

xml

<Directory /var/www/html/>
    AllowOverride All
</Directory>
Restart Apache:



sudo systemctl restart apache2    # Ubuntu/Debian
sudo systemctl restart httpd      # Amazon Linux/CentOS
Step 8: Complete the WordPress Installation via Browser
Access your server's public IP or domain name in a web browser:

arduino

http://your-server-ip/wordpress
Complete the setup by following the WordPress installation steps:

Choose your language.
Enter the site information (Site Title, Admin Username, Password, Email).
Log in to your WordPress dashboard after completing the setup.
Optional: Secure Your WordPress Site with HTTPS
Install Certbot for Let's Encrypt (for free SSL certificates):

Ubuntu/Debian:



sudo apt install certbot python3-certbot-apache -y
Amazon Linux/CentOS:



sudo yum install certbot python3-certbot-apache -y
Generate SSL Certificate:



sudo certbot --apache
Follow the prompts to complete the SSL setup and automatically configure your site for HTTPS.
